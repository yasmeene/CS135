;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-abbr-reader.ss" "lang")((modname doudizhu) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor mixed-fraction #f #t none #f () #t)))
;;
;; ***************************************************
;; Yasmeen Elkheir (21071183)
;; CS 135 Fall 2023
;; Assignment 05, check-expect examples 
;; ***************************************************
;;


;; Hand is one of
;; * empty
;; * Sorted (listof Card)


;; 3a ~~~~~

;; (solos hand) consumes a Hand and produces a (listof Hand), where each produced
;; hand consists of a single card from the consumed hand.

;; Example:

(check-expect
 (solos
  (list 3 3 3 3 4 4 5 5 6 7 7 7 9
        'Jack 'Jack 'Queen 'King 'Ace 2 2))
 (list (list 3) (list 4) (list 5) (list 6) (list 7)
       (list 9) (list 'Jack) (list 'Queen) (list 'King)
       (list 'Ace) (list 2)))

;; solos: Hand -> (listof Hand)

(define (solos hand)
  (cond
    [(empty? hand) hand]
    [else (list (first (remove-duplicates hand))) (solos (rest hand))]))


(define (remove-duplicates loa)
  (cond
    [(empty? loa) empty]
    [(member? (first loa) (rest loa)) (remove-duplicates (rest loa))]
    [else
     (cons
      (first loa) (remove-duplicates (rest loa)))]))


;; Tests:

(check-expect (remove-duplicates
               (cons 3 (cons 3 (cons 1 (cons 4 (cons 1 (cons 4 empty)))))))
              (cons 3 (cons 1 (cons 4 empty))))